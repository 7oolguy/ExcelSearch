import tkinter as tk
from tkinter import filedialog, ttk, messagebox
from app.excel_manager import ExcelManager
from app.file_handler import load_user_settings, save_user_settings

class ExcelSearchGUI:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Excel Search")
        self.excel_manager = ExcelManager()
        self.settings = load_user_settings() or {}

        self.file_path = None
        self.sheet_name = None

        # UI Components
        self.create_widgets()
        self.load_user_settings()

    def create_widgets(self):
        self.file_button = tk.Button(self.root, text="Select Excel", command=self.select_excel)
        self.file_button.pack(pady=10)

        self.sheet_label = tk.Label(self.root, text="Sheet:")
        self.sheet_label.pack()

        self.sheet_combo = ttk.Combobox(self.root, state="readonly")
        self.sheet_combo.pack(pady=5)

        self.table_label = tk.Label(self.root, text="Table:")
        self.table_label.pack()

        self.table_combo = ttk.Combobox(self.root, state="readonly")
        self.table_combo.pack(pady=5)

        self.search_entry = tk.Entry(self.root)
        self.search_entry.pack(pady=10)

        self.search_button = tk.Button(self.root, text="Search", command=self.search_value)
        self.search_button.pack(pady=5)

        self.results_list = tk.Listbox(self.root)
        self.results_list.pack(pady=10)

        self.save_button = tk.Button(self.root, text="Save Changes", command=self.save_changes)
        self.save_button.pack(pady=5)

    def select_excel(self):
        self.file_path = filedialog.askopenfilename(filetypes=[("Excel files", "*.xlsx")])
        if self.file_path:
            self.excel_manager.load_excel(self.file_path)
            self.update_sheet_dropdown()
            self.save_user_settings()

    def update_sheet_dropdown(self):
        self.sheet_combo['values'] = self.excel_manager.get_sheet_names()
        if self.sheet_name:
            self.sheet_combo.set(self.sheet_name)
        else:
            self.sheet_combo.current(0)
        self.update_table_dropdown()

    def update_table_dropdown(self):
        tables = self.excel_manager.get_table_names()
        if tables:
            self.table_combo['values'] = tables
            self.table_combo.current(0)
        else:
            self.table_combo.set("No Tables Found")

    def search_value(self):
        search_term = self.search_entry.get()
        if not search_term:
            messagebox.showwarning("Input Error", "Please enter a search term.")
            return
        rows = self.excel_manager.search_value(search_term)
        self.results_list.delete(0, tk.END)
        for row in rows:
            self.results_list.insert(tk.END, row)

    def save_changes(self):
        self.excel_manager.save_changes()
        messagebox.showinfo("Success", "Changes saved successfully.")

    def save_user_settings(self):
        data = {
            "file_path": self.file_path,
            "sheet_name": self.sheet_name
        }
        save_user_settings(data)

    def load_user_settings(self):
        if self.settings:
            self.file_path = self.settings.get("file_path", None)
            self.sheet_name = self.settings.get("sheet_name", None)
            if self.file_path:
                self.excel_manager.load_excel(self.file_path)
                self.update_sheet_dropdown()

    def run(self):
        self.root.mainloop()
